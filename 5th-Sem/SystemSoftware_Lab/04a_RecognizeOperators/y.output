Conflict in state 8 between rule 1 and token '+' resolved as reduce.
Conflict in state 8 between rule 1 and token '-' resolved as reduce.
Conflict in state 8 between rule 1 and token '*' resolved as shift.
Conflict in state 8 between rule 1 and token '/' resolved as shift.
Conflict in state 9 between rule 2 and token '+' resolved as reduce.
Conflict in state 9 between rule 2 and token '-' resolved as reduce.
Conflict in state 9 between rule 2 and token '*' resolved as shift.
Conflict in state 9 between rule 2 and token '/' resolved as shift.
Conflict in state 10 between rule 3 and token '+' resolved as reduce.
Conflict in state 10 between rule 3 and token '-' resolved as reduce.
Conflict in state 10 between rule 3 and token '*' resolved as reduce.
Conflict in state 10 between rule 3 and token '/' resolved as reduce.
Conflict in state 11 between rule 4 and token '+' resolved as reduce.
Conflict in state 11 between rule 4 and token '-' resolved as reduce.
Conflict in state 11 between rule 4 and token '*' resolved as reduce.
Conflict in state 11 between rule 4 and token '/' resolved as reduce.

Grammar
rule 1    exp -> exp '+' exp
rule 2    exp -> exp '-' exp
rule 3    exp -> exp '*' exp
rule 4    exp -> exp '/' exp
rule 5    exp -> NUMBER
rule 6    exp -> ID

Terminals, with rules where they appear

$ (-1)
'*' (42) 3
'+' (43) 1
'-' (45) 2
'/' (47) 4
error (256)
NUMBER (258) 5
ID (259) 6

Nonterminals, with rules where they appear

exp (9)
    on left: 1 2 3 4 5 6, on right: 1 2 3 4


state 0

    NUMBER	shift, and go to state 1
    ID  	shift, and go to state 2

    exp 	go to state 3



state 1

    exp  ->  NUMBER .   (rule 5)

    $default	reduce using rule 5 (exp)



state 2

    exp  ->  ID .   (rule 6)

    $default	reduce using rule 6 (exp)



state 3

    exp  ->  exp . '+' exp   (rule 1)
    exp  ->  exp . '-' exp   (rule 2)
    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)

    $   	go to state 12
    '+' 	shift, and go to state 4
    '-' 	shift, and go to state 5
    '*' 	shift, and go to state 6
    '/' 	shift, and go to state 7



state 4

    exp  ->  exp '+' . exp   (rule 1)

    NUMBER	shift, and go to state 1
    ID  	shift, and go to state 2

    exp 	go to state 8



state 5

    exp  ->  exp '-' . exp   (rule 2)

    NUMBER	shift, and go to state 1
    ID  	shift, and go to state 2

    exp 	go to state 9



state 6

    exp  ->  exp '*' . exp   (rule 3)

    NUMBER	shift, and go to state 1
    ID  	shift, and go to state 2

    exp 	go to state 10



state 7

    exp  ->  exp '/' . exp   (rule 4)

    NUMBER	shift, and go to state 1
    ID  	shift, and go to state 2

    exp 	go to state 11



state 8

    exp  ->  exp . '+' exp   (rule 1)
    exp  ->  exp '+' exp .   (rule 1)
    exp  ->  exp . '-' exp   (rule 2)
    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)

    '*' 	shift, and go to state 6
    '/' 	shift, and go to state 7

    $default	reduce using rule 1 (exp)



state 9

    exp  ->  exp . '+' exp   (rule 1)
    exp  ->  exp . '-' exp   (rule 2)
    exp  ->  exp '-' exp .   (rule 2)
    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)

    '*' 	shift, and go to state 6
    '/' 	shift, and go to state 7

    $default	reduce using rule 2 (exp)



state 10

    exp  ->  exp . '+' exp   (rule 1)
    exp  ->  exp . '-' exp   (rule 2)
    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp '*' exp .   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)


    $default	reduce using rule 3 (exp)



state 11

    exp  ->  exp . '+' exp   (rule 1)
    exp  ->  exp . '-' exp   (rule 2)
    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)
    exp  ->  exp '/' exp .   (rule 4)


    $default	reduce using rule 4 (exp)



state 12

    $   	go to state 13



state 13

    $default	accept
